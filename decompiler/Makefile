# $URL: https://scummvm.svn.sourceforge.net/svnroot/scummvm/tools/branches/gsoc2009-decompiler/Makefile $
# $Id: Makefile 40546 2009-05-13 23:38:11Z strangerke $

#######################################################################
# Default compilation parameters. Normally don't edit these           #
#######################################################################

srcdir      ?= .

DEFINES     :=
LDFLAGS     := $(LDFLAGS)
INCLUDES    := -I. -I$(srcdir)
LIBS        :=
OBJS        :=
DEPDIR      := .deps

# Load the make rules generated by configure
# HACK: We don't yet support configure in the tools SVN module, but at least one can
# manually create a config.mk files with overrides, if needed.
-include config.mk

CXXFLAGS  += -g

# Additional warnings
CXXFLAGS:= -Wall $(CXXFLAGS)
# Turn off some annoying and not-so-useful warnings
CXXFLAGS+= -Wno-long-long -Wno-multichar -Wno-unknown-pragmas -Wno-reorder
# Enable even more warnings...
CXXFLAGS+= -pedantic	# -pedantic is too pedantic, at least on Mac OS X
CXXFLAGS+= -Wpointer-arith -Wcast-qual -Wconversion
#CXXFLAGS+= -Wshadow
CXXFLAGS+= -Wimplicit -Wundef -Wnon-virtual-dtor -Wwrite-strings

# Disable exceptions, and enabled checking of pointers returned by "new"
CXXFLAGS+= -fcheck-new

#######################################################################
# Default commands - put the necessary replacements in config.mk      #
#######################################################################

CAT     ?= cat
CP      ?= cp
ECHO    ?= printf
INSTALL ?= install
MKDIR   ?= mkdir -p
RM      ?= rm -f
RM_REC  ?= $(RM) -r
ZIP     ?= zip -q

CC      := gcc
CXX     := g++

#######################################################################

# HACK: Until we get proper module support, add these "module dirs" to 
# get the dependency tracking code working.
MODULE_DIRS := ./ utils/

#######################################################################

TARGETS := \
	decompiler$(EXEEXT)

all: $(TARGETS)

clean:
	rm -f *.o $(TARGETS)


.PHONY: all clean


decompiler$(EXEEXT): decompiler.o
	$(CXX) $(LDFLAGS) -o $@ $+ -lboost_program_options

decompiler.o: cfg.h graph.h instruction.h misc.h parser.h reader.h


######################################################################
# The build rules follow - normally you should have no need to
# touch whatever comes after here.
######################################################################

# Concat DEFINES and INCLUDES to form the CPPFLAGS
CPPFLAGS := $(DEFINES) $(INCLUDES)

# Include the build instructions for all modules
#-include $(addprefix $(srcdir)/, $(addsuffix /module.mk,$(MODULES)))

# Depdir information
DEPDIRS = $(addsuffix $(DEPDIR),$(MODULE_DIRS))
DEPFILES =

%.o: %.cpp
	$(MKDIR) $(*D)/$(DEPDIR)
	$(CXX) -Wp,-MMD,"$(*D)/$(DEPDIR)/$(*F).d",-MQ,"$@",-MP $(CXXFLAGS) $(CPPFLAGS) -c $(<) -o $*.o

# Include the dependency tracking files.
-include $(wildcard $(addsuffix /*.d,$(DEPDIRS)))
